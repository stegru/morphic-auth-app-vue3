---
trigger:
  branches:
    include:
      - master
      - develop
      - "release/*"
      - "hotfix/*"
  tags:
   include: 
     - "v*"


variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  imageName: 'morphiccommunity'
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    newDeployTag: stable-$(Build.BuildNumber)
    deployRepoRef: master
    imageTags: |
      stable
      stable-$(Build.BuildNumber)
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    newDeployTag: develop-$(Build.BuildNumber)
    deployRepoRef: develop
    imageTags: |
      latest
      develop-$(Build.BuildNumber)
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags') }}:
    imageTags: |
      $(Build.SourceBranchName)

  # pipelines require that all repositories are accessible before you ever use them.
  # Since we want to push tag changes from master to master (and develop to develop)
  # but do NOT want to push tag changes on PR branches, we simply set the deploy repo
  # branch to master. We won't use it anyway.
  ${{ if eq(variables['deployRepoRef'], '') }}:
    deployRepoRef: master

resources:
  repositories:
    - repository: deploy-morphic-community-web
      type: github
      endpoint: raisingthefloor
      name: raisingthefloor/deploy-morphic-community-web
      ref: $(deployRepoRef)

pool:
  vmImage: "ubuntu-18.04"

stages:
  - stage: docker
    jobs:
      - job: build_and_publish_image
        condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
        steps: 
          - task: Docker@2
            displayName: Login to docker hub
            inputs:
              command: login
              containerRegistry: morphicworld dockerhub
          - task: Docker@2
            displayName: build and push image
            inputs:
              repository: morphicworld/morphiccommunity
              command: buildAndPush
              Dockerfile: Dockerfile
              tags: $(imageTags)
  - stage: update_deploy_tag
    jobs:
      - job: update_deploy_tag
        condition: ne(variables['newDeployTag'], '')
        steps:
          - checkout: deploy-morphic-community-web
            persistCredentials: true
            path: deploy-morphic-community-web
          - task: Bash@3
            env:
              NEWTAG: $(newDeployTag)
              BRANCH: $(deployRepoRef)
            inputs:
              targetType: 'inline'
              workingDirectory: resources/community-1.0/
              script: |
                set -e
                set -x
                echo "installing kustomize"
                wget "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" -O install_kustomize.sh
                bash install_kustomize.sh

                git checkout ${BRANCH}

                ls -al
                echo "setting new image tag"
                ./kustomize edit set image morphicworld/morphiccommunity=morphicworld/morphiccommunity:${NEWTAG}

                cat kustomization.yaml

                git config --global user.email "buildmaster@raisingthefloor.org"
                git config --global user.name "buildmaster"
                git commit kustomization.yaml -m "buildmaster: updating community tag to ${NEWTAG}"
                git push
